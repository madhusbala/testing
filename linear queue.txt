// queue.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
int queue_array[5]={0};
int queue_size=5;
int front_ptr=0,rear_ptr=0;



void enqueue(int in);
void dequeue();
void queue_status();
void display();

int _tmain(int argc, _TCHAR* argv[])
{

	enqueue(12);
	queue_status();
	
  
}


void enqueue(int in)
{
	if((front_ptr <= queue_size-1  &&  rear_ptr >= 0)|(front_ptr == 0))
	{
		if(front_ptr==0 && rear_ptr==0)
		{
			queue_array[rear_ptr]=in;
			front_ptr++;

		}
		else
		{
			int k=front_ptr;
			while(k>0)
			{
			queue_array[k]=queue_array[k-1];
			k--;
			}
		    queue_array[rear_ptr]=in;	
			front_ptr++;
		}
	printf("queued data is : %d\n", queue_array[rear_ptr]);

	}
	else
		printf("queue is full\n");
}
 
void dequeue()
 {
	 if((front_ptr >= (queue_size-1)) | (front_ptr >=(queue_size-1)  &&  rear_ptr>=0))
	 {
	 queue_array[front_ptr-1]=0;
	 rear_ptr++;
	 printf("After dequeue:\n");
	 display();
	 }
	 else
		 printf("The queue is empty\n");
 }

 void queue_status()
 {
	 if(front_ptr <= queue_size  &&  rear_ptr >= 0)
			printf("There is space in queue\n");
		if(front_ptr == 0 && rear_ptr==0)
			printf("The queue is empty\n");
		if(front_ptr == queue_size)
			printf("queue is full\n");
 }
 void display()
 {
	 printf("Front end is : %d\n", front_ptr);
	 printf("Rear end is : %d\n", rear_ptr);
	 printf("Queue is:\n");
	 for(int j=0;j<queue_size-1;j++)
	 {
	 printf("%d\t", queue_array[j]);
	 }
	 printf("\n");
 }