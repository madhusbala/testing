// circularqueue_withptrs.cpp : Defines the entry point for the console application.

#include "stdafx.h"
int queue_array[6]={0};
int queue_size=6;
int *front_ptr=queue_array,*rear_ptr=queue_array;
int front_ptr_count=0;

void enqueue(int in);
void dequeue();
void queue_status();
void display();

int _tmain(int argc, _TCHAR* argv[])
{

	enqueue(12);
	enqueue(13);
	enqueue(14);
	enqueue(15);
	enqueue(16);
	enqueue(17);
	dequeue();
    dequeue();


	printf("\n Queue is:\n");
	 for(int j=0;j<queue_size;j++)
	 {
	 printf("%d\t", queue_array[j]);
	 }
	 printf("\n");

	enqueue(18);
	enqueue(19);
	enqueue(20);
	
	

	 printf("\n Queue is:\n");
	 for(int j=0;j<queue_size;j++)
	 {
	 printf("%d\t", queue_array[j]);
	 }
	 printf("\n");

}


void enqueue(int in)
	{
		if((front_ptr_count >=queue_size) && (*(rear_ptr-1) == 0))
		{
			
			//*(queue_array+0)=*(queue_array+(queue_size-1));
				front_ptr=(queue_array+0);
				*front_ptr=in;
				printf("queued data is : %d\n", *front_ptr);
		}
		else if (front_ptr_count >=queue_size)
				printf(" Queue overflows");
		else if (*front_ptr==0 && *rear_ptr==0)
		{
			*rear_ptr=in;	
			printf("queued data is : %d\n", *rear_ptr);
		}
		else 
		{		
			*front_ptr=in;	
			printf("queued: %d\n",*front_ptr);
		}
		front_ptr++;
		front_ptr_count++;
		
		if(front_ptr_count == queue_size)
			front_ptr_count=0;  

		}


void dequeue()
 {
	 *rear_ptr=0;
	 rear_ptr++;
	 printf("dequeued \n");
 }
